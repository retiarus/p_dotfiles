---
- name: dotfiles | make ~/.config
  file: path=~/.config state=directory

- name: dotfiles | create backup directory
  file: path=~/.backups state=directory

- name: dotfiles | check for non-symlink originals
  command: test -e ~/{{ item }} -a ! -L ~/{{ item }}
  failed_when: original_check.rc > 1
  register: original_check
  with_items: '{{dotfile_files}}'
  changed_when: false

- name: dotfiles | backup originals
  command:
    rsync -aAXHhiu -relative ~/./{{ item.0 }} ~/.backups/
    creates=~/.backups/{{ item.0 }}
  with_together:
    - '{{dotfile_files}}'
    - '{{original_check.results}}'
  when: item.1.rc == 0 # item exists and is not a symlink
  loop_control:
    label: '{{item.0}}'

- name: dotfiles | remove originals
  command:
    rm -r ~/{{ item.0 }}
    removes=~/{{ item.0 }}
  with_together:
    - '{{dotfile_files}}'
    - '{{original_check.results}}'
  when: item.1.rc == 0 # item exists and is not a symlink
  loop_control:
    label: '{{item.0}}'

- name: dotfiles | create symlinks
  file: src={{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}
        path=~/{{ item }}
        state=link
        force=yes
  with_items: '{{dotfile_files}}'
  ignore_errors: True


- name: clone powerlevel10k
  git:
    repo: 'https://github.com/romkatv/powerlevel10k'
    dest: "/home/peregrinus/.oh-my-zsh/themes/powerlevel10k"
    clone: yes
    update: yes
    recursive: yes
    force: yes
  become_user: peregrinus

- name: clone zsh-syntax-highlighting
  git:
    repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
    dest: "/home/peregrinus/.oh-my-zsh/plugins/zsh-syntax-highlighting/"
    clone: yes
    update: yes
    recursive: yes
    force: yes
  become_user: peregrinus

- name: clone zsh-autosuggestions
  git:
    repo: 'https://github.com/zsh-users/zsh-autosuggestions'
    dest: "/home/peregrinus/.oh-my-zsh/plugins/zsh-autosuggestions"
    clone: yes
    update: yes
    recursive: yes
    force: yes
  become_user: peregrinus

- name: dotfiles | vim bundle
  command: vim -E -u ~/.vim/plugin/dein.vim +silent +"call dein#install()" +qall
